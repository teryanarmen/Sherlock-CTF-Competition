/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { See, SeeInterface } from "../See";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_challenge",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "lookBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_looker",
        type: "address",
      },
    ],
    name: "lookCollaborations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040516104ad3803806104ad833981810160405281019061002591906100ce565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100fb565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009b82610070565b9050919050565b6100ab81610090565b81146100b657600080fd5b50565b6000815190506100c8816100a2565b92915050565b6000602082840312156100e4576100e361006b565b5b60006100f2848285016100b9565b91505092915050565b6103a38061010a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063102052c81461003b578063df40f13814610059575b600080fd5b610043610089565b60405161005091906101ff565b60405180910390f35b610073600480360381019061006e919061027d565b61012f565b60405161008091906101ff565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b1580156100f257600080fd5b505afa158015610106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a91906102d6565b905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b29abe5a846040518263ffffffff1660e01b815260040161018b9190610312565b604080518083038186803b1580156101a257600080fd5b505afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da919061032d565b50905080915050919050565b6000819050919050565b6101f9816101e6565b82525050565b600060208201905061021460008301846101f0565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061024a8261021f565b9050919050565b61025a8161023f565b811461026557600080fd5b50565b60008135905061027781610251565b92915050565b6000602082840312156102935761029261021a565b5b60006102a184828501610268565b91505092915050565b6102b3816101e6565b81146102be57600080fd5b50565b6000815190506102d0816102aa565b92915050565b6000602082840312156102ec576102eb61021a565b5b60006102fa848285016102c1565b91505092915050565b61030c8161023f565b82525050565b60006020820190506103276000830184610303565b92915050565b600080604083850312156103445761034361021a565b5b6000610352858286016102c1565b9250506020610363858286016102c1565b915050925092905056fea26469706673582212209abf745d3d4d12454de42a48edb3aff29823e46466d74067c9e00e5dd70fa29264736f6c63430008090033";

type SeeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class See__factory extends ContractFactory {
  constructor(...args: SeeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "See";
  }

  deploy(
    _challenge: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<See> {
    return super.deploy(_challenge, overrides || {}) as Promise<See>;
  }
  getDeployTransaction(
    _challenge: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_challenge, overrides || {});
  }
  attach(address: string): See {
    return super.attach(address) as See;
  }
  connect(signer: Signer): See__factory {
    return super.connect(signer) as See__factory;
  }
  static readonly contractName: "See";
  public readonly contractName: "See";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeeInterface {
    return new utils.Interface(_abi) as SeeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): See {
    return new Contract(address, _abi, signerOrProvider) as See;
  }
}
