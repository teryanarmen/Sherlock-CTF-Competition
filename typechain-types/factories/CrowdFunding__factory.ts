/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CrowdFunding, CrowdFundingInterface } from "../CrowdFunding";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "uint256",
        name: "numFunders",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "funderID",
        type: "uint256",
      },
    ],
    name: "getRefund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "startCampaign",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignID",
        type: "uint256",
      },
    ],
    name: "stopCampaign",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052610952806100136000396000f3fe60806040526004361061003f5760003560e01c8063141961bc1461004457806385fa74bc14610082578063a8b78ed01461009e578063ec6c8216146100a8575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906105e4565b6100c4565b604051610079929190610773565b60405180910390f35b61009c6004803603810190610097919061060d565b610108565b005b6100a661032e565b005b6100c260048036038101906100bd91906105e4565b610495565b005b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600060016000848152602001908152602001600020905060013414610162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015990610713565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ec906106f3565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1681600201600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029290610733565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102e1573d6000803e3d6000fd5b50806002016000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050505050565b60013414610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036890610713565b60405180910390fd5b6000806000815480929190610385906107e9565b9190505590506000600160008381526020019081526020016000209050338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013481525081600201600083600001600081548092919061042b906107e9565b91905055815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505050565b60006001600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610753565b60405180910390fd5b600160008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550503373ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156105ca573d6000803e3d6000fd5b505050565b6000813590506105de81610905565b92915050565b6000602082840312156105f657600080fd5b6000610604848285016105cf565b91505092915050565b6000806040838503121561062057600080fd5b600061062e858286016105cf565b925050602061063f858286016105cf565b9150509250929050565b610652816107ad565b82525050565b600061066560128361079c565b915061067082610861565b602082019050919050565b6000610688600f8361079c565b91506106938261088a565b602082019050919050565b60006106ab600a8361079c565b91506106b6826108b3565b602082019050919050565b60006106ce60098361079c565b91506106d9826108dc565b602082019050919050565b6106ed816107df565b82525050565b6000602082019050818103600083015261070c81610658565b9050919050565b6000602082019050818103600083015261072c8161067b565b9050919050565b6000602082019050818103600083015261074c8161069e565b9050919050565b6000602082019050818103600083015261076c816106c1565b9050919050565b600060408201905061078860008301856106e4565b6107956020830184610649565b9392505050565b600082825260208201905092915050565b60006107b8826107bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107f4826107df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561082757610826610832565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f742063616d706169676e206f776e65720000000000000000000000000000600082015250565b7f496e636f72726563742056616c75650000000000000000000000000000000000600082015250565b7f4e6f742066756e64657200000000000000000000000000000000000000000000600082015250565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b61090e816107df565b811461091957600080fd5b5056fea264697066735822122042449a2ff6d8dd85904621c8dbfa3271a40400cd41d25d4e9721dbc1b26d2b4f64736f6c63430008040033";

type CrowdFundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdFundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdFunding__factory extends ContractFactory {
  constructor(...args: CrowdFundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CrowdFunding";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<CrowdFunding> {
    return super.deploy(overrides || {}) as Promise<CrowdFunding>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdFunding {
    return super.attach(address) as CrowdFunding;
  }
  connect(signer: Signer): CrowdFunding__factory {
    return super.connect(signer) as CrowdFunding__factory;
  }
  static readonly contractName: "CrowdFunding";
  public readonly contractName: "CrowdFunding";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdFundingInterface {
    return new utils.Interface(_abi) as CrowdFundingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdFunding {
    return new Contract(address, _abi, signerOrProvider) as CrowdFunding;
  }
}
