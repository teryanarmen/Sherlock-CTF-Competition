/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ExploitHelper, ExploitHelperInterface } from "../ExploitHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "first",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fourth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "second",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "third",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052738720d38bbc9212b8fd202bccda07cff32b6f79206000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b506000600381111561007257fe5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100d857600080fd5b505afa1580156100ec573d6000803e3d6000fd5b505050506040513d602081101561010257600080fd5b8101908080519060200190929190505050600381111561011e57fe5b14156101375761013261014b60201b60201c565b610146565b6101456101cd60201b60201c565b5b61024f565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6dc67716040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101b357600080fd5b505af11580156101c7573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633df4ddf46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b50505050565b6104308061025e6000396000f3fe6080604052600436106100595760003560e01c80633df4ddf41461006557806341c0e1b51461007c5780635a8ac02d1461009357806364d4d700146100aa5780638c09138f146100d5578063a6dc6771146100ec57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a610103565b005b34801561008857600080fd5b50610091610185565b005b34801561009f57600080fd5b506100a861019f565b005b3480156100b657600080fd5b506100bf610221565b6040518082815260200191505060405180910390f35b3480156100e157600080fd5b506100ea6102f6565b005b3480156100f857600080fd5b50610101610378565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633df4ddf46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561016b57600080fd5b505af115801561017f573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635a8ac02d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561020757600080fd5b505af115801561021b573d6000803e3d6000fd5b50505050565b60006001600381111561023057fe5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d60208110156102c057600080fd5b810190808051906020019092919050505060038111156102dc57fe5b14156102ec5761053990506102f3565b620138d590505b90565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c09138f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561035e57600080fd5b505af1158015610372573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6dc67716040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103e057600080fd5b505af11580156103f4573d6000803e3d6000fd5b5050505056fea26469706673582212207f6b416ba7bef1302e014a4ca61a2eb1c05d94193b1cae1bab007040170fdb0c64736f6c63430007060033";

type ExploitHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExploitHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExploitHelper__factory extends ContractFactory {
  constructor(...args: ExploitHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExploitHelper";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExploitHelper> {
    return super.deploy(overrides || {}) as Promise<ExploitHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExploitHelper {
    return super.attach(address) as ExploitHelper;
  }
  connect(signer: Signer): ExploitHelper__factory {
    return super.connect(signer) as ExploitHelper__factory;
  }
  static readonly contractName: "ExploitHelper";
  public readonly contractName: "ExploitHelper";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExploitHelperInterface {
    return new utils.Interface(_abi) as ExploitHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExploitHelper {
    return new Contract(address, _abi, signerOrProvider) as ExploitHelper;
  }
}
