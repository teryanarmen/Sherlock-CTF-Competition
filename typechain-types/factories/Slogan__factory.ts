/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Slogan, SloganInterface } from "../Slogan";

const _abi = [
  {
    inputs: [],
    name: "currentSloganOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
    ],
    name: "setSlogan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "slogan",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610680806100206000396000f3fe6080604052600436106100345760003560e01c80630d8d210c1461003957806324e5eeaa14610069578063fcb6617514610094575b600080fd5b610053600480360381019061004e919061032a565b6100bf565b6040516100609190610400565b60405180910390f35b34801561007557600080fd5b5061007e61016b565b60405161008b919061041b565b60405180910390f35b3480156100a057600080fd5b506100a96101f9565b6040516100b691906103e5565b60405180910390f35b600066038d7ea4c68000341461010a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101019061043d565b60405180910390fd5b816000908051906020019061012092919061021f565b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600080546101789061054f565b80601f01602080910402602001604051908101604052809291908181526020018280546101a49061054f565b80156101f15780601f106101c6576101008083540402835291602001916101f1565b820191906000526020600020905b8154815290600101906020018083116101d457829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82805461022b9061054f565b90600052602060002090601f01602090048101928261024d5760008555610294565b82601f1061026657805160ff1916838001178555610294565b82800160010185558215610294579182015b82811115610293578251825591602001919060010190610278565b5b5090506102a191906102a5565b5090565b5b808211156102be5760008160009055506001016102a6565b5090565b60006102d56102d084610482565b61045d565b9050828152602081018484840111156102ed57600080fd5b6102f884828561050d565b509392505050565b600082601f83011261031157600080fd5b81356103218482602086016102c2565b91505092915050565b60006020828403121561033c57600080fd5b600082013567ffffffffffffffff81111561035657600080fd5b61036284828501610300565b91505092915050565b610374816104cf565b82525050565b610383816104e1565b82525050565b6000610394826104b3565b61039e81856104be565b93506103ae81856020860161051c565b6103b781610610565b840191505092915050565b60006103cf6004836104be565b91506103da82610621565b602082019050919050565b60006020820190506103fa600083018461036b565b92915050565b6000602082019050610415600083018461037a565b92915050565b600060208201905081810360008301526104358184610389565b905092915050565b60006020820190508181036000830152610456816103c2565b9050919050565b6000610467610478565b90506104738282610581565b919050565b6000604051905090565b600067ffffffffffffffff82111561049d5761049c6105e1565b5b6104a682610610565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006104da826104ed565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561053a57808201518184015260208101905061051f565b83811115610549576000848401525b50505050565b6000600282049050600182168061056757607f821691505b6020821081141561057b5761057a6105b2565b5b50919050565b61058a82610610565b810181811067ffffffffffffffff821117156105a9576105a86105e1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f6661696c0000000000000000000000000000000000000000000000000000000060008201525056fea2646970667358221220375d3af84716af30ae0a10b712d581927b4e0bfd267d654782b7ceb851cc168364736f6c63430008040033";

type SloganConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SloganConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Slogan__factory extends ContractFactory {
  constructor(...args: SloganConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Slogan";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Slogan> {
    return super.deploy(overrides || {}) as Promise<Slogan>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Slogan {
    return super.attach(address) as Slogan;
  }
  connect(signer: Signer): Slogan__factory {
    return super.connect(signer) as Slogan__factory;
  }
  static readonly contractName: "Slogan";
  public readonly contractName: "Slogan";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SloganInterface {
    return new utils.Interface(_abi) as SloganInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Slogan {
    return new Contract(address, _abi, signerOrProvider) as Slogan;
  }
}
