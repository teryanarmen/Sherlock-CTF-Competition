/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MyFriendlyAndHelpfulLittleContract,
  MyFriendlyAndHelpfulLittleContractInterface,
} from "../MyFriendlyAndHelpfulLittleContract";

const _abi = [
  {
    inputs: [],
    name: "PROPOSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_attacker",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_thisTimelock",
        type: "address",
      },
    ],
    name: "doStuff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610edc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638f61f4f51461003b578063e8b936d314610059575b600080fd5b610043610075565b6040516100509190610c63565b60405180910390f35b610073600480360381019061006e9190610928565b610099565b005b7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc181565b6000600467ffffffffffffffff8111156100dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561010a5781602001602082028036833780820191505090505b5090508181600081518110610148577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816001815181106101bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281600281518110610232577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505030816003815181106102a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600467ffffffffffffffff811115610324577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103525781602001602082028036833780820191505090505b509050600081600081518110610391577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506000816001815181106103d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600081600281518110610421577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600081600381518110610469577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506000600467ffffffffffffffff8111156104b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104eb57816020015b60608152602001906001900390816104d65790505b50905060006040516024016105009190610ca7565b6040516020818303038152906040527f24adbc5b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050816000815181106105b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052507fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1306040516024016105f5929190610c7e565b6040516020818303038152906040527f2f2ff15d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050816001815181106106ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250856040516024016106c89190610bb7565b6040516020818303038152906040527ff2fde38b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508160028151811061077f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525085858560405160240161079f93929190610bd2565b6040516020818303038152906040527fe8b936d3000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081600381518110610856577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508373ffffffffffffffffffffffffffffffffffffffff166390bd1e6d84848460405160200161088f90610ba2565b604051602081830303815290604052805190602001206040518563ffffffff1660e01b81526004016108c49493929190610c09565b600060405180830381600087803b1580156108de57600080fd5b505af11580156108f2573d6000803e3d6000fd5b50505050505050505050565b60008135905061090d81610e78565b92915050565b60008135905061092281610e8f565b92915050565b60008060006060848603121561093d57600080fd5b600061094b868287016108fe565b935050602061095c868287016108fe565b925050604061096d86828701610913565b9150509250925092565b600061098383836109ca565b60208301905092915050565b600061099b8383610b28565b905092915050565b60006109af8383610b93565b60208301905092915050565b6109c481610da6565b82525050565b6109d381610d94565b82525050565b6109e281610d94565b82525050565b60006109f382610cf2565b6109fd8185610d45565b9350610a0883610cc2565b8060005b83811015610a39578151610a208882610977565b9750610a2b83610d1e565b925050600181019050610a0c565b5085935050505092915050565b6000610a5182610cfd565b610a5b8185610d56565b935083602082028501610a6d85610cd2565b8060005b85811015610aa95784840389528151610a8a858261098f565b9450610a9583610d2b565b925060208a01995050600181019050610a71565b50829750879550505050505092915050565b6000610ac682610d08565b610ad08185610d67565b9350610adb83610ce2565b8060005b83811015610b0c578151610af388826109a3565b9750610afe83610d38565b925050600181019050610adf565b5085935050505092915050565b610b2281610db8565b82525050565b6000610b3382610d13565b610b3d8185610d78565b9350610b4d818560208601610e0b565b610b5681610e3e565b840191505092915050565b610b6a81610df9565b82525050565b6000610b7d600283610d89565b9150610b8882610e4f565b600282019050919050565b610b9c81610de2565b82525050565b6000610bad82610b70565b9150819050919050565b6000602082019050610bcc60008301846109d9565b92915050565b6000606082019050610be760008301866109d9565b610bf460208301856109d9565b610c0160408301846109bb565b949350505050565b60006080820190508181036000830152610c2381876109e8565b90508181036020830152610c378186610abb565b90508181036040830152610c4b8185610a46565b9050610c5a6060830184610b19565b95945050505050565b6000602082019050610c786000830184610b19565b92915050565b6000604082019050610c936000830185610b19565b610ca060208301846109d9565b9392505050565b6000602082019050610cbc6000830184610b61565b92915050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610d9f82610dc2565b9050919050565b6000610db182610dc2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610e0482610dec565b9050919050565b60005b83811015610e29578082015181840152602081019050610e0e565b83811115610e38576000848401525b50505050565b6000601f19601f8301169050919050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b610e8181610d94565b8114610e8c57600080fd5b50565b610e9881610da6565b8114610ea357600080fd5b5056fea26469706673582212209003b88b4d0adda14b6c304e61d3f778ecbe1444bae3d7e9a9e46d0b1c57e46d64736f6c63430008040033";

type MyFriendlyAndHelpfulLittleContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyFriendlyAndHelpfulLittleContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyFriendlyAndHelpfulLittleContract__factory extends ContractFactory {
  constructor(...args: MyFriendlyAndHelpfulLittleContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyFriendlyAndHelpfulLittleContract";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyFriendlyAndHelpfulLittleContract> {
    return super.deploy(
      overrides || {}
    ) as Promise<MyFriendlyAndHelpfulLittleContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyFriendlyAndHelpfulLittleContract {
    return super.attach(address) as MyFriendlyAndHelpfulLittleContract;
  }
  connect(signer: Signer): MyFriendlyAndHelpfulLittleContract__factory {
    return super.connect(signer) as MyFriendlyAndHelpfulLittleContract__factory;
  }
  static readonly contractName: "MyFriendlyAndHelpfulLittleContract";
  public readonly contractName: "MyFriendlyAndHelpfulLittleContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyFriendlyAndHelpfulLittleContractInterface {
    return new utils.Interface(
      _abi
    ) as MyFriendlyAndHelpfulLittleContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyFriendlyAndHelpfulLittleContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MyFriendlyAndHelpfulLittleContract;
  }
}
