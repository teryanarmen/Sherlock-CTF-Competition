/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleQuizExploit,
  ExampleQuizExploitInterface,
} from "../ExampleQuizExploit";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rankedUsers",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052610565806100136000396000f3fe60806040526004361061004a5760003560e01c806312065fe01461004f57806327e235e31461007a5780633ccfd60b146100b7578063c079546d146100ce578063d0e30db01461010b575b600080fd5b34801561005b57600080fd5b50610064610115565b60405161007191906103ea565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c919061030d565b61011d565b6040516100ae91906103ea565b60405180910390f35b3480156100c357600080fd5b506100cc610135565b005b3480156100da57600080fd5b506100f560048036038101906100f0919061030d565b61027b565b60405161010291906103af565b60405180910390f35b610113610293565b005b600047905090565b60016020528060005260406000206000915090505481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161018657600080fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516101ac9061039a565b60006040518083038185875af1925050503d80600081146101e9576040519150601f19603f3d011682016040523d82523d6000602084013e6101ee565b606091505b5050905080610232576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610229906103ca565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60006020528060005260406000206000915090505481565b600034116102a057600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ef9190610421565b92505081905550565b60008135905061030781610518565b92915050565b60006020828403121561031f57600080fd5b600061032d848285016102f8565b91505092915050565b61033f81610489565b82525050565b6000610352601483610410565b915061035d826104ec565b602082019050919050565b6000610375600083610405565b915061038082610515565b600082019050919050565b610394816104b3565b82525050565b60006103a582610368565b9150819050919050565b60006020820190506103c46000830184610336565b92915050565b600060208201905081810360008301526103e381610345565b9050919050565b60006020820190506103ff600083018461038b565b92915050565b600081905092915050565b600082825260208201905092915050565b600061042c826104b3565b9150610437836104b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561046c5761046b6104bd565b5b828201905092915050565b600061048282610493565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b50565b61052181610477565b811461052c57600080fd5b5056fea26469706673582212207bfbac1ae9ed1a216cde628179109433d37905696528801c914ba0ba1b1a06f764736f6c63430008040033";

type ExampleQuizExploitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleQuizExploitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleQuizExploit__factory extends ContractFactory {
  constructor(...args: ExampleQuizExploitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExampleQuizExploit";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ExampleQuizExploit> {
    return super.deploy(overrides || {}) as Promise<ExampleQuizExploit>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExampleQuizExploit {
    return super.attach(address) as ExampleQuizExploit;
  }
  connect(signer: Signer): ExampleQuizExploit__factory {
    return super.connect(signer) as ExampleQuizExploit__factory;
  }
  static readonly contractName: "ExampleQuizExploit";
  public readonly contractName: "ExampleQuizExploit";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleQuizExploitInterface {
    return new utils.Interface(_abi) as ExampleQuizExploitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleQuizExploit {
    return new Contract(address, _abi, signerOrProvider) as ExampleQuizExploit;
  }
}
