/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BitMania, BitManiaInterface } from "../BitMania";

const _abi = [
  {
    inputs: [],
    name: "encFlag",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringFlag",
        type: "string",
      },
    ],
    name: "encryptFlag",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isSolved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "flag",
        type: "string",
      },
    ],
    name: "solveIt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061095b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634deeb6c91461005157806364d98f6e1461006d578063b09b7e9f1461008b578063b428f416146100bb575b600080fd5b61006b60048036038101906100669190610678565b6100d9565b005b610075610150565b6040516100829190610701565b60405180910390f35b6100a560048036038101906100a09190610678565b610161565b6040516100b2919061071c565b60405180910390f35b6100c36105d7565b6040516100d0919061071c565b60405180910390f35b60006100e482610161565b90506040518060400160405280601b81526020017f6e3c5b0f722c430e6d324c0d6f67173d4b1565345915753504211f0000000000815250805190602001208180519060200120141561014c5760016000806101000a81548160ff0219169083151502179055505b5050565b60008054906101000a900460ff1681565b6060600082905060005b81518110156105cd576000811115610242578160018261018b91906107b0565b815181106101c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b828281518110610206577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010181815160f81c60f81b189150907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b600482828151811061027d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c8282815181106102e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010181815160f81c60f81b189150907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600382828151811061035b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c8282815181106103c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010181815160f81c60f81b189150907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506002828281518110610439577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c8282815181106104a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010181815160f81c60f81b189150907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001828281518110610517577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c82828151811061057f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020010181815160f81c60f81b189150907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806105c59061086d565b91505061016b565b5080915050919050565b6040518060400160405280601b81526020017f6e3c5b0f722c430e6d324c0d6f67173d4b1565345915753504211f000000000081525081565b600061062361061e84610763565b61073e565b90508281526020810184848401111561063b57600080fd5b6106468482856107fa565b509392505050565b600082601f83011261065f57600080fd5b813561066f848260208601610610565b91505092915050565b60006020828403121561068a57600080fd5b600082013567ffffffffffffffff8111156106a457600080fd5b6106b08482850161064e565b91505092915050565b6106c2816107e4565b82525050565b60006106d382610794565b6106dd818561079f565b93506106ed818560208601610809565b6106f681610914565b840191505092915050565b600060208201905061071660008301846106b9565b92915050565b6000602082019050818103600083015261073681846106c8565b905092915050565b6000610748610759565b9050610754828261083c565b919050565b6000604051905090565b600067ffffffffffffffff82111561077e5761077d6108e5565b5b61078782610914565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006107bb826107f0565b91506107c6836107f0565b9250828210156107d9576107d86108b6565b5b828203905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561082757808201518184015260208101905061080c565b83811115610836576000848401525b50505050565b61084582610914565b810181811067ffffffffffffffff82111715610864576108636108e5565b5b80604052505050565b6000610878826107f0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108ab576108aa6108b6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea26469706673582212207daf8ec9c3debb98f16a13138433d370e38fdc7a5d8b4cc0b1377490d4fe121264736f6c63430008040033";

type BitManiaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitManiaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitMania__factory extends ContractFactory {
  constructor(...args: BitManiaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BitMania";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BitMania> {
    return super.deploy(overrides || {}) as Promise<BitMania>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BitMania {
    return super.attach(address) as BitMania;
  }
  connect(signer: Signer): BitMania__factory {
    return super.connect(signer) as BitMania__factory;
  }
  static readonly contractName: "BitMania";
  public readonly contractName: "BitMania";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitManiaInterface {
    return new utils.Interface(_abi) as BitManiaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitMania {
    return new Contract(address, _abi, signerOrProvider) as BitMania;
  }
}
