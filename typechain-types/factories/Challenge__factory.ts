/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Challenge, ChallengeInterface } from "../Challenge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "callSloganContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "sloganContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040516105e33803806105e383398181016040528101906100259190610080565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100f2565b60008151905061007a816100db565b92915050565b60006020828403121561009257600080fd5b60006100a08482850161006b565b91505092915050565b60006100b4826100bb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100e4816100a9565b81146100ef57600080fd5b50565b6104e2806101016000396000f3fe6080604052600436106100295760003560e01c806315692cc21461002e578063fe93f1ed1461004a575b600080fd5b6100486004803603810190610043919061022b565b610075565b005b34801561005657600080fd5b5061005f61019f565b60405161006c91906102e6565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156100cf57600080fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161011791906102cf565b600060405180830381855af49150503d8060008114610152576040519150601f19603f3d011682016040523d82523d6000602084013e610157565b606091505b505090508061019b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019290610301565b60405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006101d66101d184610346565b610321565b9050828152602081018484840111156101ee57600080fd5b6101f98482856103d0565b509392505050565b600082601f83011261021257600080fd5b81356102228482602086016101c3565b91505092915050565b60006020828403121561023d57600080fd5b600082013567ffffffffffffffff81111561025757600080fd5b61026384828501610201565b91505092915050565b6102758161039e565b82525050565b600061028682610377565b6102908185610382565b93506102a08185602086016103df565b80840191505092915050565b60006102b9600c8361038d565b91506102c482610483565b602082019050919050565b60006102db828461027b565b915081905092915050565b60006020820190506102fb600083018461026c565b92915050565b6000602082019050818103600083015261031a816102ac565b9050919050565b600061032b61033c565b90506103378282610412565b919050565b6000604051905090565b600067ffffffffffffffff82111561036157610360610443565b5b61036a82610472565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006103a9826103b0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156103fd5780820151818401526020810190506103e2565b8381111561040c576000848401525b50505050565b61041b82610472565b810181811067ffffffffffffffff8211171561043a57610439610443565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f63616c6c206661696c656421000000000000000000000000000000000000000060008201525056fea2646970667358221220e55cbd1c0f25544d7b73356d5dca4d6e21466aac9da2d060ff8cffcf55bb29ef64736f6c63430008040033";

type ChallengeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChallengeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Challenge__factory extends ContractFactory {
  constructor(...args: ChallengeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Challenge";
  }

  deploy(
    _contract: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Challenge> {
    return super.deploy(_contract, overrides || {}) as Promise<Challenge>;
  }
  getDeployTransaction(
    _contract: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contract, overrides || {});
  }
  attach(address: string): Challenge {
    return super.attach(address) as Challenge;
  }
  connect(signer: Signer): Challenge__factory {
    return super.connect(signer) as Challenge__factory;
  }
  static readonly contractName: "Challenge";
  public readonly contractName: "Challenge";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChallengeInterface {
    return new utils.Interface(_abi) as ChallengeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Challenge {
    return new Contract(address, _abi, signerOrProvider) as Challenge;
  }
}
