/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Monopoly, MonopolyInterface } from "../Monopoly";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "Move",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "Roll",
    type: "event",
  },
  {
    inputs: [],
    name: "FACTOR",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "landPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_seed1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_seed2",
        type: "uint32",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract gameVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405264012ace4c7f60c01b6000806101000a81548167ffffffffffffffff021916908360c01c02179055506311e1a300600155600363ffffffff62000048919062000182565b600260006101000a81548163ffffffff021916908363ffffffff160217905550670de0b6b3a764000034146200007d57600080fd5b6040516200008b9062000174565b604051809103906000f080158015620000a8573d6000803e3d6000fd5b50600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200015457600080fd5b505af115801562000169573d6000803e3d6000fd5b5050505050620001fc565b610900806200115783390190565b60006200018f82620001bd565b91506200019c83620001bd565b925082821015620001b257620001b1620001cd565b5b828203905092915050565b600063ffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610f4b806200020c6000396000f3fe60806040526004361061004e5760003560e01c806335815b95146100dd5780633d84ad3614610108578063b69ef8a814610124578063fbfa77cf1461014f578063fc22c15c1461017a576100d8565b366100d857600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156100bd57600080fd5b505af11580156100d1573d6000803e3d6000fd5b5050505050005b600080fd5b3480156100e957600080fd5b506100f26101a5565b6040516100ff9190610b1f565b60405180910390f35b610122600480360381019061011d9190610a16565b6101b6565b005b34801561013057600080fd5b50610139610470565b6040516101469190610bb0565b60405180910390f35b34801561015b57600080fd5b50610164610476565b6040516101719190610b3a565b60405180910390f35b34801561018657600080fd5b5061018f61049c565b60405161019c9190610bb0565b60405180910390f35b60008054906101000a900460c01b81565b6703782dace9d90000341015610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f890610b75565b60405180910390fd5b8063ffffffff168263ffffffff161415610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610b55565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b5050505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c71daccb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561033b57600080fd5b505afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037391906109e9565b6003819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff16905060006103d8846104a2565b61ffff1690506103e7836104a2565b61ffff16816103f69190610c93565b9050610402818361054b565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555061046a60035461092d565b50505050565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008060008363ffffffff1660008054906101000a900460c01b60c01c6104c99190610dd2565b67ffffffffffffffff1614156104e9573360601b60f01c831890506104f5565b3260601b60f01c831890505b60008161ffff16141561050b5761050a610e03565b5b7f752b35218b9ad998f78abcfb161accee51390de6d63e02dcc72f07186ba811cf8160405161053a9190610b95565b60405180910390a180915050919050565b6000808263ffffffff16141561056357829150610572565b828261056f9190610c93565b91505b60008263ffffffff16141561058f5761058a3461092d565b610922565b600082600260009054906101000a900463ffffffff166105af9190610da1565b63ffffffff1614156105d5576105d06002346105cb9190610c31565b61092d565b610921565b60016004600260009054906101000a900463ffffffff166105f69190610c62565b6106009190610bf7565b63ffffffff168263ffffffff16148061065957506002806004600260009054906101000a900463ffffffff166106369190610c62565b6106409190610c93565b61064a9190610bf7565b63ffffffff168263ffffffff16145b806106a457506003806004600260009054906101000a900463ffffffff166106819190610c62565b61068b9190610c93565b6106959190610bf7565b63ffffffff168263ffffffff16145b156106ae57610920565b6004600260009054906101000a900463ffffffff166106cd9190610c62565b63ffffffff168263ffffffff1611610707578263ffffffff16600154026001819055506001546003600082825403925050819055506108e1565b6004600260009054906101000a900463ffffffff166107269190610c62565b63ffffffff168263ffffffff16118015610775575060026004600260009054906101000a900463ffffffff1661075c9190610c62565b6107669190610c93565b63ffffffff168263ffffffff16105b156107a55760028363ffffffff1660015402026001819055506001546003600082825403925050819055506108e0565b60026004600260009054906101000a900463ffffffff166107c69190610c62565b6107d09190610c93565b63ffffffff168263ffffffff1611801561081f575060036004600260009054906101000a900463ffffffff166108069190610c62565b6108109190610c93565b63ffffffff168263ffffffff16105b1561084f5760038363ffffffff1660015402026001819055506001546003600082825403925050819055506108df565b60036004600260009054906101000a900463ffffffff166108709190610c62565b61087a9190610c93565b63ffffffff168263ffffffff161180156108b25750600260009054906101000a900463ffffffff1663ffffffff168263ffffffff1611155b156108de5760048363ffffffff1660015402026001819055506001546003600082825403925050819055505b5b5b5b7f50f44140ea9d8180695101623961811b910fc908dff8a657cb82b8b780ed5858836040516109109190610bcb565b60405180910390a1819050610927565b5b5b600090505b92915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db518db233836040518363ffffffff1660e01b815260040161098a929190610af6565b600060405180830381600087803b1580156109a457600080fd5b505af11580156109b8573d6000803e3d6000fd5b5050505050565b6000815190506109ce81610ee7565b92915050565b6000813590506109e381610efe565b92915050565b6000602082840312156109ff576109fe610e90565b5b6000610a0d848285016109bf565b91505092915050565b60008060408385031215610a2d57610a2c610e90565b5b6000610a3b858286016109d4565b9250506020610a4c858286016109d4565b9150509250929050565b610a5f81610cd1565b82525050565b610a6e81610ce3565b82525050565b610a7d81610d6b565b82525050565b6000610a90600783610be6565b9150610a9b82610e95565b602082019050919050565b6000610ab3601183610be6565b9150610abe82610ebe565b602082019050919050565b610ad281610d0f565b82525050565b610ae181610d3d565b82525050565b610af081610d47565b82525050565b6000604082019050610b0b6000830185610a56565b610b186020830184610ad8565b9392505050565b6000602082019050610b346000830184610a65565b92915050565b6000602082019050610b4f6000830184610a74565b92915050565b60006020820190508181036000830152610b6e81610a83565b9050919050565b60006020820190508181036000830152610b8e81610aa6565b9050919050565b6000602082019050610baa6000830184610ac9565b92915050565b6000602082019050610bc56000830184610ad8565b92915050565b6000602082019050610be06000830184610ae7565b92915050565b600082825260208201905092915050565b6000610c0282610d47565b9150610c0d83610d47565b92508263ffffffff03821115610c2657610c25610e32565b5b828201905092915050565b6000610c3c82610d3d565b9150610c4783610d3d565b925082610c5757610c56610e61565b5b828204905092915050565b6000610c6d82610d47565b9150610c7883610d47565b925082610c8857610c87610e61565b5b828204905092915050565b6000610c9e82610d47565b9150610ca983610d47565b92508163ffffffff0483118215151615610cc657610cc5610e32565b5b828202905092915050565b6000610cdc82610d1d565b9050919050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b6000610d7682610d7d565b9050919050565b6000610d8882610d8f565b9050919050565b6000610d9a82610d1d565b9050919050565b6000610dac82610d47565b9150610db783610d47565b925082610dc757610dc6610e61565b5b828206905092915050565b6000610ddd82610d57565b9150610de883610d57565b925082610df857610df7610e61565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4e6168206e616800000000000000000000000000000000000000000000000000600082015250565b7f302e32352045544820706572207475726e000000000000000000000000000000600082015250565b610ef081610d3d565b8114610efb57600080fd5b50565b610f0781610d47565b8114610f1257600080fd5b5056fea26469706673582212200db8dd68b291ab0b483f727976ec5e8b4c4f10b35bfb0f23a7f642aaec15022a64736f6c63430008070033608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108a0806100606000396000f3fe6080604052600436106100555760003560e01c80632e1a7d4d1461005a578063aced166114610083578063b69ef8a8146100ae578063c71daccb146100d9578063d0e30db014610104578063db518db21461010e575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c919061056c565b610137565b005b34801561008f57600080fd5b506100986102be565b6040516100a59190610635565b60405180910390f35b3480156100ba57600080fd5b506100c36102e2565b6040516100d09190610690565b60405180910390f35b3480156100e557600080fd5b506100ee6102e8565b6040516100fb9190610690565b60405180910390f35b61010c6102f2565b005b34801561011a57600080fd5b506101356004803603810190610130919061052c565b61039b565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bc90610670565b60405180910390fd5b60015481111561020a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020190610650565b60405180910390fd5b806001600082825461021c919061071d565b9250508190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161026a90610620565b60006040518083038185875af1925050503d80600081146102a7576040519150601f19603f3d011682016040523d82523d6000602084013e6102ac565b606091505b50509050806102ba57600080fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000600154905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610670565b60405180910390fd5b346001600082825461039291906106c7565b92505081905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042090610670565b60405180910390fd5b60015481111561046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046590610650565b60405180910390fd5b8060016000828254610480919061071d565b9250508190555060008273ffffffffffffffffffffffffffffffffffffffff16826040516104ad90610620565b60006040518083038185875af1925050503d80600081146104ea576040519150601f19603f3d011682016040523d82523d6000602084013e6104ef565b606091505b50509050806104fd57600080fd5b505050565b6000813590506105118161083c565b92915050565b60008135905061052681610853565b92915050565b60008060408385031215610543576105426107bc565b5b600061055185828601610502565b925050602061056285828601610517565b9150509250929050565b600060208284031215610582576105816107bc565b5b600061059084828501610517565b91505092915050565b6105a281610751565b82525050565b60006105b56025836106b6565b91506105c0826107c1565b604082019050919050565b60006105d86000836106ab565b91506105e382610810565b600082019050919050565b60006105fb6013836106b6565b915061060682610813565b602082019050919050565b61061a81610783565b82525050565b600061062b826105cb565b9150819050919050565b600060208201905061064a6000830184610599565b92915050565b60006020820190508181036000830152610669816105a8565b9050919050565b60006020820190508181036000830152610689816105ee565b9050919050565b60006020820190506106a56000830184610611565b92915050565b600081905092915050565b600082825260208201905092915050565b60006106d282610783565b91506106dd83610783565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107125761071161078d565b5b828201905092915050565b600061072882610783565b915061073383610783565b9250828210156107465761074561078d565b5b828203905092915050565b600061075c82610763565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f43616e20796f75206f66666572206d6520616e20696e7374616c6c6d656e742060008201527f706c616e3f000000000000000000000000000000000000000000000000000000602082015250565b50565b7f596f75207368616c6c206e6f7420706173732e00000000000000000000000000600082015250565b61084581610751565b811461085057600080fd5b50565b61085c81610783565b811461086757600080fd5b5056fea2646970667358221220a398f7e85b76a2d185670c8a6c0e191a59d18df9c82a1ba121b10a1dcc6337e564736f6c63430008070033";

type MonopolyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MonopolyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Monopoly__factory extends ContractFactory {
  constructor(...args: MonopolyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Monopoly";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Monopoly> {
    return super.deploy(overrides || {}) as Promise<Monopoly>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Monopoly {
    return super.attach(address) as Monopoly;
  }
  connect(signer: Signer): Monopoly__factory {
    return super.connect(signer) as Monopoly__factory;
  }
  static readonly contractName: "Monopoly";
  public readonly contractName: "Monopoly";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MonopolyInterface {
    return new utils.Interface(_abi) as MonopolyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Monopoly {
    return new Contract(address, _abi, signerOrProvider) as Monopoly;
  }
}
