/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dead, DeadInterface } from "../Dead";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeKiller",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "canKill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newKiller",
        type: "address",
      },
    ],
    name: "changeKiller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "killed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "killer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeToKill",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052683635c9adc5dea0000060005567016345785d8a0000341461002557600080fd5b33600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034603202600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c32806100bc6000396000f3fe6080604052600436106100a75760003560e01c80636d919d21116100645780636d919d21146101b7578063a359dd23146101e4578063b2dd5c07146101ee578063c29028f214610255578063ddca3f431461026c578063e684e08814610297576100a7565b80631aa3a008146100ac5780631f3a0e41146100b657806327e235e3146100e35780633ab3d4f61461014857806341c0e1b514610189578063593b1b9c146101a0575b600080fd5b6100b46102e8565b005b3480156100c257600080fd5b506100cb6103a7565b60405180821515815260200191505060405180910390f35b3480156100ef57600080fd5b506101326004803603602081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b8565b6040518082815260200191505060405180910390f35b34801561015457600080fd5b5061015d6103d0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019557600080fd5b5061019e6103f6565b005b3480156101ac57600080fd5b506101b56105c6565b005b3480156101c357600080fd5b506101cc610785565b60405180821515815260200191505060405180910390f35b6101ec610798565b005b3480156101fa57600080fd5b5061023d6004803603602081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095d565b60405180821515815260200191505060405180910390f35b34801561026157600080fd5b5061026a61097d565b005b34801561027857600080fd5b50610281610ac3565b6040518082815260200191505060405180910390f35b3480156102a357600080fd5b506102e6600480360360208110156102ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ac9565b005b60004710156102f657600080fd5b662386f26fc10000341461030957600080fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60018054906101000a900460ff1681565b60026020528060005260406000206000915090505481565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f596f75206e65656420746f2062652061206b6c696c657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900460ff1661051e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610bd96024913960400191505060405180910390fd5b6000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405180600001905060006040518083038185875af1925050503d80600081146105a0576040519150601f19603f3d011682016040523d82523d6000602084013e6105a5565b606091505b5050905060018060016101000a81548160ff02191690831515021790555050565b60004710156105d457600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f59657420746f207265676973746572000000000000000000000000000000000081525060200191505060405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d806000811461077a576040519150601f19603f3d011682016040523d82523d6000602084013e61077f565b606091505b50505050565b600160009054906101000a900460ff1681565b6000600a60026000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548161080557fe5b04905067016345785d8a00003410610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f57686f6f612c207468617427732061206c6f74206f66206d6f6e65790000000081525060200191505060405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061095a5733600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60036020528060005260406000206000915054906101000a900460ff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109d357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a2e57600080fd5b60006005600860026000600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540281610a9e57fe5b04470310610ac15760018060006101000a81548160ff0219169083151502179055505b565b60005481565b600160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610bb46025913960400191505060405180910390fd5b80600160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe596f75206861766520746f20626520746865206b696c6c657220746f206e6f6d696e61746550617469656e746c792077616974696e6720666f72207468652072696768742074696d65a2646970667358221220cf1a02dcad1adc71d67b9783cc1ed59901a2a57fe1ca3b4e9aa936e5efb56dde64736f6c63430007040033";

type DeadConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeadConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dead__factory extends ContractFactory {
  constructor(...args: DeadConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Dead";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Dead> {
    return super.deploy(overrides || {}) as Promise<Dead>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Dead {
    return super.attach(address) as Dead;
  }
  connect(signer: Signer): Dead__factory {
    return super.connect(signer) as Dead__factory;
  }
  static readonly contractName: "Dead";
  public readonly contractName: "Dead";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeadInterface {
    return new utils.Interface(_abi) as DeadInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dead {
    return new Contract(address, _abi, signerOrProvider) as Dead;
  }
}
